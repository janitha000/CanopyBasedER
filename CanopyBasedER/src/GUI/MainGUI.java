/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BlockBuilding.Soundex.InvertedIndexes;
import BlockBuilding.Soundex.InvertedSoundex;
import Comparison.ComparisonWithoutQuery;
import Comparison.comparisonWithoutStoring;
import DataStuctures.Entity;
import Experiments.SoundexExperiments.CanopyBuildingExperiment;
import static Experiments.SoundexExperiments.QueryExperiment.getRecords;
import Indexes.CanopyIndex;
import Indexes.EntityIndex;
import Utilities.Serialization;
import java.util.ArrayList;
import javax.swing.JTable;
import GUI.SqlTable;
import Query.InvertedQuery;
import Utilities.mySqlConnection;
import java.awt.BorderLayout;
import java.awt.ComponentOrientation;
import java.awt.Dimension;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author JanithaT
 */
public class MainGUI extends javax.swing.JFrame {
    String queryRecord;
    CanopyIndex CI;
    EntityIndex EI;
    InvertedIndexes I;
    ArrayList<String> attributes;
    HashMap<String, Entity> records ;
            
    DefaultTableModel model = new DefaultTableModel(new Object[][] {
      { "some", "text" }, { "any", "text" }, { "even", "more" },
      { "text", "strings" }, { "and", "other" }, { "text", "values" } },
      new Object[] { "Column 1", "Column 2" });
    
    /**
     * Creates new form MainGUI
     */
    public MainGUI() throws SQLException {
        initComponents();
        this.setTitle("Canopy Clustering Based ER");
        this.setDefaultCloseOperation(EXIT_ON_CLOSE );
        CI = (CanopyIndex) Serialization.loadSerializedObject("E:\\4th Year\\Research\\Imp\\Indexes\\CI.ser");
        EI = (EntityIndex) Serialization.loadSerializedObject("E:\\4th Year\\Research\\Imp\\Indexes\\EI.ser");
         I = new InvertedIndexes();
        attributes = new ArrayList<>();
        attributes.add("firstname");
        attributes.add("lastname");
        records = getRecords();
        
        

    JTable table = new JTable(model);
    
    //getContentPane().add(new JScrollPane(table), BorderLayout.CENTER);
    pack();
        

    }
    
     public static HashMap<String, Entity> getRecords() {
        HashMap<String, Entity> test = new HashMap<String, Entity>();
        mySqlConnection connecton = new mySqlConnection("csvimport", "root", "jibtennakoon", "person2");
        try {

            test = connecton.getInvertedIndexData();
                    //for (Entity en : test) {
            //System.out.println("Record name " + en.getFirstName());
            //}

        } catch (SQLException ex) {
            Logger.getLogger(CanopyBuildingExperiment.class.getName()).log(Level.SEVERE, null, ex);
        }
        test.entrySet().stream().forEach((entry) -> {
            //System.out.print("Key : " + entry.getKey());
            Entity list = entry.getValue();

                //System.out.println(" " + list.getFirstName() );
            //System.out.println(entry.getKey().hashCode());
        });
        return test;
    }
    
    public static void fillTable() throws SQLException{
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        attr1 = new javax.swing.JTextField();
        Query = new javax.swing.JButton();
        ResultDisplay = new javax.swing.JScrollPane();
        ResultDisplay1 = new javax.swing.JTextArea();
        MIDisplay = new javax.swing.JButton();
        EntityDisplay = new javax.swing.JButton();
        IIDisplay = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        attr2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        attr3 = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        Database = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel7.setText("Attribute1");

        attr1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attr1ActionPerformed(evt);
            }
        });

        Query.setText("Query");
        Query.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QueryActionPerformed(evt);
            }
        });

        ResultDisplay1.setColumns(20);
        ResultDisplay1.setRows(5);
        ResultDisplay.setViewportView(ResultDisplay1);

        MIDisplay.setText("MI");
        MIDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MIDisplayActionPerformed(evt);
            }
        });

        EntityDisplay.setText("EI");
        EntityDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EntityDisplayActionPerformed(evt);
            }
        });

        IIDisplay.setText("Inverted Indexes");

        jLabel4.setText("Attribute2");

        jLabel5.setText("Attribute3");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(attr3))
                    .addComponent(ResultDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(attr1)
                            .addComponent(attr2))
                        .addGap(1, 1, 1)))
                .addGap(36, 36, 36)
                .addComponent(Query, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addComponent(MIDisplay)
                .addGap(26, 26, 26)
                .addComponent(EntityDisplay)
                .addGap(32, 32, 32)
                .addComponent(IIDisplay)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MIDisplay)
                    .addComponent(EntityDisplay)
                    .addComponent(IIDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Query, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(attr1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(attr2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(attr3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(ResultDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        jLabel7.getAccessibleContext().setAccessibleName("Query");

        jTabbedPane1.addTab("tab1", jPanel1);

        jMenu1.setText("File");

        Database.setLabel("Select Database");
        Database.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DatabaseActionPerformed(evt);
            }
        });
        jMenu1.add(Database);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DatabaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DatabaseActionPerformed
       new DatabaseForm().setVisible(true);
    }//GEN-LAST:event_DatabaseActionPerformed

    private void EntityDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EntityDisplayActionPerformed
        EntityIndexDisplay EII = new EntityIndexDisplay(EI);
        EII.setVisible(true);

    }//GEN-LAST:event_EntityDisplayActionPerformed

    private void MIDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MIDisplayActionPerformed
        MainIndexDisplay MI = new MainIndexDisplay(CI);
        MI.setVisible(true);
    }//GEN-LAST:event_MIDisplayActionPerformed

    private void QueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QueryActionPerformed
        ResultDisplay1.setText("");
        String attrr1 = (!attr1.getText().isEmpty()) ? attr1.getText() : " "  ;
        String attrr2 = (!attr2.getText().isEmpty()) ? attr2.getText() : " "  ;
        String attrr3 = (!attr3.getText().isEmpty()) ? attr3.getText() : " "  ;

        Entity queryEntity = new Entity("QUERY", attrr1, attrr2, attrr3);
        ArrayList<InvertedSoundex> II = I.getInvertedIndexes(attributes, true);

        InvertedQuery IQ = new InvertedQuery();
        ArrayList<Entity> results = IQ.query(queryEntity, II, CI, EI, 0.6, 0.9, records);

        if(results.isEmpty())
        ResultDisplay1.append("No Results in the Database");
        for (Entity result : results) {
            ResultDisplay1.append(result.getRecordID()/*.replace(" ", "")*/+ ", " + result.getFirstName()/*.replace(" ", "")*/+ ", " + result.getLastName()/*.replace(" ", "")*/+
                ", " + result.getCity().replace(" ", "")+ "\n");

        }
    }//GEN-LAST:event_QueryActionPerformed

    private void attr1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attr1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_attr1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MainGUI().setVisible(true);
                     fillTable();
                    
                } catch (SQLException ex) {
                    Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Database;
    private javax.swing.JButton EntityDisplay;
    private javax.swing.JButton IIDisplay;
    private javax.swing.JButton MIDisplay;
    private javax.swing.JButton Query;
    private javax.swing.JScrollPane ResultDisplay;
    private javax.swing.JTextArea ResultDisplay1;
    private javax.swing.JTextField attr1;
    private javax.swing.JTextField attr2;
    private javax.swing.JTextField attr3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
